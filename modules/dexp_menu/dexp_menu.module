<?php

/*
 * * Implement hook_block_menu
 */

function dexp_menu_menu() {
  $items['admin/drupalexp/menu'] = array(
      'title' => t('Menu settings'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('dexp_menu_settings_form'),
      'access arguments' => array('administer'),
      'type' => MENU_NORMAL_ITEM
  );
  $items['contextual'] = array(
      'title' => 'The contextual example page',
      'page callback' => 'contextual_example_page',
      'page arguments' => array(1),
      'access callback' => TRUE
  );
  return $items;
}

function dexp_menu_settings_form() {
  $form['dexp_menu_block_count'] = array(
      '#type' => 'textfield',
      '#title' => 'Number of blocks',
      '#default_value' => variable_get('dexp_menu_block_count', 3)
  );
  return system_settings_form($form);
}

/*
 * * Implement hook_block_info
 */

function dexp_menu_block_info() {
  $blocks = array();
  $count = variable_get('dexp_menu_block_count', 3);
  for ($i = 1; $i <= $count; $i++) {
    $blocks['dexp_menu_block_' . $i] = array(
        'info' => t('DrupalExp Dropdown Menu ' . $i),
        'cache' => DRUPAL_NO_CACHE
    );
  }
  return $blocks;
}

/*
 * * Implement hook_block_configure
 */

function dexp_menu_block_configure($delta = '') {
  if (str_replace('dexp_menu_block_', '', $delta) != $delta) {
    $number = str_replace('dexp_menu_block_', '', $delta);
    $form['dexp_menu_menu'] = array(
        '#type' => 'select',
        '#title' => t('Menu'),
        '#required' => true,
        '#default_value' => variable_get('dexp_menu_menu_' . $number, 'main-menu:0'),
        '#options' => menu_parent_options(menu_get_menus(), array('mlid' => 0, 'plid' => 0)),
    );
    return $form;
  }
}

/*
 * * Implement hook_block_save.
 */

function dexp_menu_block_save($delta = '', $edit = array()) {
  if (str_replace('dexp_menu_block_', '', $delta) != $delta) {
    $number = str_replace('dexp_menu_block_', '', $delta);
    variable_set('dexp_menu_menu_' . $number, $edit['dexp_menu_menu']);
  }
}

/*
 * * Implement hook_block_view
 */

function dexp_menu_block_view($delta) {
  if (str_replace('dexp_menu_block_', '', $delta) != $delta) {
    $number = str_replace('dexp_menu_block_', '', $delta);
    return _dexp_menu_block($number);
  }
}

/*
 * *Implements hook_theme()
 */

function dexp_menu_theme(&$vars) {
  $module_path = drupal_get_path('module', 'dexp_menu');
  $base = array(
      'path' => "{$module_path}/theme",
  );
  return array(
      'dexp_menu' => array(
          'template' => 'dexpmenu',
          'path' => $module_path . '/theme',
          'pattern' => 'dexpmenu__',
          'preprocess functions' => array(
              'template_preprocess',
              'dexp_menu_preprocess_dexp_menu',
          ),
      ),
  );
}

function dexp_menu_preprocess_dexp_menu(&$vars) {
  $vars['html_id'] = drupal_html_id('dexp-dropdown');
  $vars['classes_array'][] = 'dexp-dropdown';
}

/*
 * *Helper function to call theme.
 */

function _dexp_menu_block($number) {
  drupal_add_css(drupal_get_path('module', 'dexp_menu') . '/css/dexp-menu.css', array('media' => 'screen and (min-width: 992px)'));
  drupal_add_css(drupal_get_path('module', 'dexp_menu') . '/css/dexp-mobile-menu.css', array('media' => 'screen and (max-width: 991px)'));
  drupal_add_js(drupal_get_path('module', 'dexp_menu') . '/js/dexp-menu.js');
  $items = array();
  $menu = explode(':', variable_get('dexp_menu_menu_' . $number, 'main-menu:0'));
  $tree = menu_tree_all_data($menu[0]);
  $menu_tree = _dexp_menu_submenu_tree_all_data($tree, $menu[1]);
  $menu_tree = menu_tree_output($menu_tree);
  $output = render($menu_tree);
  $id = 1;
  $block = array(
      'subject' => '',
      'content' => array(
          '#type' => 'markup',
          '#markup' => theme('dexp_menu', array('output' => $output)),
          '#contextual_links' => array(
              'contextual_links_example' => array(
                  'examples/contextual-links',
                  array($id),
              ),
          ),
      ),
  );
  return $block;
}

/**
 * Implements hook_block_view_alter().
 */
function dexp_menu_block_view_alter(&$data, $block) {
  //if (str_replace('dexp_menu_block_', '', $delta) != $delta) {
  //$contextual_links = array(
  //    'contextual',
  //    array($block->module),
  //);
  //$data['content']['#contextual_links']['contextual_example'] = $contextual_links;
  //}
}

function _dexp_menu_submenu_tree_all_data($tree, $plid = 0) {
  if ($plid == 0)
    return $tree;
  $ret = array();
  foreach ($tree as $branch) {
    if ($branch['link']['mlid'] == $plid) {
      $ret = $branch['below'];
      return $ret;
      break;
    } elseif (is_array($branch['below'])) {
      $ret = _dexp_menu_submenu_tree_all_data($branch['below'], $plid);
      if (!empty($ret))
        return $ret;
    }
  }
  return $ret;
}

function dexp_menu_form_menu_edit_item_alter(&$form, &$form_state) {
  if (isset($form['mlid']['#value'])) {
    $options = unserialize(db_query('SELECT options FROM {menu_links} WHERE mlid = :mlid', array(':mlid' => $form['mlid']['#value']))->fetchField());
  }
  if (!isset($options['link_icon'])) {
    $options['link_icon'] = '';
  }
  $form['options']['link_icon'] = array(
      '#type' => 'textfield',
      '#title' => t('Link icon'),
      '#default_value' => $options['link_icon'],
  );
}

function dexp_menu_menu_link_alter(&$item) {
  if (isset($item['link_icon'])) {
    $item['options']['link_icon'] = $item['link_icon'];
  }
}